<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>ibex</id>
    <version>2</version>
    <packageSourceUrl>https://github.com/lebarsfa/ibex-lib/tree/actions/packages/choco/ibex/</packageSourceUrl>
    <owners>lebarsfa</owners>
    <title>IBEX</title>
    <authors>IBEX Team</authors>
    <projectUrl>https://github.com/ibex-team/ibex-lib</projectUrl>
    <iconUrl>https://cdn.statically.io/gh/lebarsfa/Packages/23ed816/choco/icons/IBEX_small_rvb.png</iconUrl>
    <licenseUrl>https://github.com/ibex-team/ibex-lib/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/ibex-team/ibex-lib</projectSourceUrl>
    <tags>ibex interval contraints contractor processing programming library C++ CPP</tags>
    <summary>IBEX is a C++ library for constraint processing over real numbers.</summary>
    <description>
IBEX is a C++ library for constraint processing over real numbers.

## Quick start
- After [installing Chocolatey](https://chocolatey.org/install), run `choco install -y ibex cmake make qtcreator` in PowerShell and then launch Qt Creator and choose Open Project, open `test_ibex\CMakelists.txt` (get the folder from https://www.ensta-bretagne.fr/lebars/Share/test_ibex.zip), ensure Desktop is selected and click Configure Project, wait 10 s then click on the big bottom green Run button, finally check that "My first interval:[0, 1]" appears.

## Troubleshooting
- Check that all the packages and their dependencies were installed, if one failed (e.g. due to network-related errors) try to reinstall it using `--force` or try a previous version...
- 32 bit versions of Qt Creator do not seem available any more, see https://github.com/AdmiringWorm/chocolatey-packages/issues/362.
- If multiple compilers are already installed, Qt Creator might show multiple possibilities in the Configure Project panel, ensure you choose one compatible with https://chocolatey.org/packages/ibex#dependencies.

## Package parameters
The following package parameters can be set:
- `/url:URL` - Will install the specified binary package (e.g. built for Visual Studio), see versions from https://github.com/lebarsfa/ibex-lib/releases (the Windows `PATH` might need to be updated manually with e.g. `C:\ProgramData\chocolatey\lib\ibex\bin`, etc.). By default, only the MinGW libraries compatible with the corresponding MinGW Chocolatey package dependency are installed. Use the standard parameter `choco install --ignore-dependencies ...` to avoid installing MinGW Chocolatey package dependency if needed.
- `/checksum:SHA256` - SHA256 checksum of the binary package specified by the `/url` parameter. If needed, use the standard parameter `choco install --ignore-checksums ...` for trusted sources.
- `/urlX:URL` - Same as above, with X in [1,99], except this will not disable the installation of the MinGW libraries compatible with the corresponding MinGW Chocolatey package dependency.
- `/checksumX:SHA256` - SHA256 checksum of the binary package specified by the `/urlX` parameter. If needed, use the standard parameter `choco install --ignore-checksums ...` for trusted sources.
- `/InstallDir:INSTALLDIR` - Installation directory.
- `/Path` - Will try to update Windows `PATH`.
- `/NoRegistry` - Will not try to update Windows registry.
To pass package parameters, use `--params "''"` (e.g. `choco install ibex --params "'/Path /NoRegistry'"`), and to install another binary package, try e.g.
```
choco install -y chocolatey-core.extension
choco install -y --ignore-dependencies ibex --params "'/url:https://github.com/lebarsfa/ibex-lib/releases/download/ibex-2/ibex_x64_vc17.zip'"
```
    </description>
    <releaseNotes>https://github.com/lebarsfa/ibex-lib/releases</releaseNotes>
    <dependencies>
      <dependency id="chocolatey-core.extension" version="1.1.0" />
      <dependency id="mingw" version="[11.2.0.07112021]" />
    </dependencies>
  </metadata>
</package>
